{"ast":null,"code":"/**\r\n * winston.js: Top-level include defining Winston.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n\n'use strict';\n\nvar logform = require('logform');\nvar _require = require('./winston/common'),\n  warn = _require.warn;\n\n/**\r\n * Expose version. Use `require` method for `webpack` support.\r\n * @type {string}\r\n */\nexports.version = require('../package.json').version;\n/**\r\n * Include transports defined by default by winston\r\n * @type {Array}\r\n */\nexports.transports = require('./winston/transports');\n/**\r\n * Expose utility methods\r\n * @type {Object}\r\n */\nexports.config = require('./winston/config');\n/**\r\n * Hoist format-related functionality from logform.\r\n * @type {Object}\r\n */\nexports.addColors = logform.levels;\n/**\r\n * Hoist format-related functionality from logform.\r\n * @type {Object}\r\n */\nexports.format = logform.format;\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {function}\r\n */\nexports.createLogger = require('./winston/create-logger');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.ExceptionHandler = require('./winston/exception-handler');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.RejectionHandler = require('./winston/rejection-handler');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Container}\r\n */\nexports.Container = require('./winston/container');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.Transport = require('winston-transport');\n/**\r\n * We create and expose a default `Container` to `winston.loggers` so that the\r\n * programmer may manage multiple `winston.Logger` instances without any\r\n * additional overhead.\r\n * @example\r\n *   // some-file1.js\r\n *   const logger = require('winston').loggers.get('something');\r\n *\r\n *   // some-file2.js\r\n *   const logger = require('winston').loggers.get('something');\r\n */\nexports.loggers = new exports.Container();\n\n/**\r\n * We create and expose a 'defaultLogger' so that the programmer may do the\r\n * following without the need to create an instance of winston.Logger directly:\r\n * @example\r\n *   const winston = require('winston');\r\n *   winston.log('info', 'some message');\r\n *   winston.error('some error');\r\n */\nvar defaultLogger = exports.createLogger();\n\n// Pass through the target methods onto `winston.\nObject.keys(exports.config.npm.levels).concat(['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'handleExceptions', 'unhandleExceptions', 'handleRejections', 'unhandleRejections', 'configure', 'child']).forEach(function (method) {\n  return exports[method] = function () {\n    return defaultLogger[method].apply(defaultLogger, arguments);\n  };\n});\n\n/**\r\n * Define getter / setter for the default logger level which need to be exposed\r\n * by winston.\r\n * @type {string}\r\n */\nObject.defineProperty(exports, 'level', {\n  get: function get() {\n    return defaultLogger.level;\n  },\n  set: function set(val) {\n    defaultLogger.level = val;\n  }\n});\n\n/**\r\n * Define getter for `exceptions` which replaces `handleExceptions` and\r\n * `unhandleExceptions`.\r\n * @type {Object}\r\n */\nObject.defineProperty(exports, 'exceptions', {\n  get: function get() {\n    return defaultLogger.exceptions;\n  }\n});\n\n/**\r\n * Define getters / setters for appropriate properties of the default logger\r\n * which need to be exposed by winston.\r\n * @type {Logger}\r\n */\n['exitOnError'].forEach(function (prop) {\n  Object.defineProperty(exports, prop, {\n    get: function get() {\n      return defaultLogger[prop];\n    },\n    set: function set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n/**\r\n * The default transports and exceptionHandlers for the default winston logger.\r\n * @type {Object}\r\n */\nObject.defineProperty(exports, 'default', {\n  get: function get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n});\n\n// Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\nwarn.deprecated(exports, 'setLevels');\nwarn.forFunctions(exports, 'useFormat', ['cli']);\nwarn.forProperties(exports, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(exports, 'deprecated', ['addRewriter', 'addFilter', 'clone', 'extend']);\nwarn.forProperties(exports, 'deprecated', ['emitErrs', 'levelLength']);\n// Throw a useful error when users attempt to run `new winston.Logger`.\nwarn.moved(exports, 'createLogger', 'Logger');","map":{"version":3,"names":["logform","require","_require","warn","exports","version","transports","config","addColors","levels","format","createLogger","ExceptionHandler","RejectionHandler","Container","Transport","loggers","defaultLogger","Object","keys","npm","concat","forEach","method","apply","arguments","defineProperty","get","level","set","val","exceptions","prop","exceptionHandlers","rejectionHandlers","deprecated","forFunctions","forProperties","moved"],"sources":["/home/cata/repos/ReactBasics/node_modules/winston/dist/winston.js"],"sourcesContent":["/**\r\n * winston.js: Top-level include defining Winston.\r\n *\r\n * (C) 2010 Charlie Robbins\r\n * MIT LICENCE\r\n */\n\n'use strict';\n\nvar logform = require('logform');\nvar _require = require('./winston/common'),\n  warn = _require.warn;\n\n/**\r\n * Expose version. Use `require` method for `webpack` support.\r\n * @type {string}\r\n */\nexports.version = require('../package.json').version;\n/**\r\n * Include transports defined by default by winston\r\n * @type {Array}\r\n */\nexports.transports = require('./winston/transports');\n/**\r\n * Expose utility methods\r\n * @type {Object}\r\n */\nexports.config = require('./winston/config');\n/**\r\n * Hoist format-related functionality from logform.\r\n * @type {Object}\r\n */\nexports.addColors = logform.levels;\n/**\r\n * Hoist format-related functionality from logform.\r\n * @type {Object}\r\n */\nexports.format = logform.format;\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {function}\r\n */\nexports.createLogger = require('./winston/create-logger');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.ExceptionHandler = require('./winston/exception-handler');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.RejectionHandler = require('./winston/rejection-handler');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Container}\r\n */\nexports.Container = require('./winston/container');\n/**\r\n * Expose core Logging-related prototypes.\r\n * @type {Object}\r\n */\nexports.Transport = require('winston-transport');\n/**\r\n * We create and expose a default `Container` to `winston.loggers` so that the\r\n * programmer may manage multiple `winston.Logger` instances without any\r\n * additional overhead.\r\n * @example\r\n *   // some-file1.js\r\n *   const logger = require('winston').loggers.get('something');\r\n *\r\n *   // some-file2.js\r\n *   const logger = require('winston').loggers.get('something');\r\n */\nexports.loggers = new exports.Container();\n\n/**\r\n * We create and expose a 'defaultLogger' so that the programmer may do the\r\n * following without the need to create an instance of winston.Logger directly:\r\n * @example\r\n *   const winston = require('winston');\r\n *   winston.log('info', 'some message');\r\n *   winston.error('some error');\r\n */\nvar defaultLogger = exports.createLogger();\n\n// Pass through the target methods onto `winston.\nObject.keys(exports.config.npm.levels).concat(['log', 'query', 'stream', 'add', 'remove', 'clear', 'profile', 'startTimer', 'handleExceptions', 'unhandleExceptions', 'handleRejections', 'unhandleRejections', 'configure', 'child']).forEach(function (method) {\n  return exports[method] = function () {\n    return defaultLogger[method].apply(defaultLogger, arguments);\n  };\n});\n\n/**\r\n * Define getter / setter for the default logger level which need to be exposed\r\n * by winston.\r\n * @type {string}\r\n */\nObject.defineProperty(exports, 'level', {\n  get: function get() {\n    return defaultLogger.level;\n  },\n  set: function set(val) {\n    defaultLogger.level = val;\n  }\n});\n\n/**\r\n * Define getter for `exceptions` which replaces `handleExceptions` and\r\n * `unhandleExceptions`.\r\n * @type {Object}\r\n */\nObject.defineProperty(exports, 'exceptions', {\n  get: function get() {\n    return defaultLogger.exceptions;\n  }\n});\n\n/**\r\n * Define getters / setters for appropriate properties of the default logger\r\n * which need to be exposed by winston.\r\n * @type {Logger}\r\n */\n['exitOnError'].forEach(function (prop) {\n  Object.defineProperty(exports, prop, {\n    get: function get() {\n      return defaultLogger[prop];\n    },\n    set: function set(val) {\n      defaultLogger[prop] = val;\n    }\n  });\n});\n\n/**\r\n * The default transports and exceptionHandlers for the default winston logger.\r\n * @type {Object}\r\n */\nObject.defineProperty(exports, 'default', {\n  get: function get() {\n    return {\n      exceptionHandlers: defaultLogger.exceptionHandlers,\n      rejectionHandlers: defaultLogger.rejectionHandlers,\n      transports: defaultLogger.transports\n    };\n  }\n});\n\n// Have friendlier breakage notices for properties that were exposed by default\n// on winston < 3.0.\nwarn.deprecated(exports, 'setLevels');\nwarn.forFunctions(exports, 'useFormat', ['cli']);\nwarn.forProperties(exports, 'useFormat', ['padLevels', 'stripColors']);\nwarn.forFunctions(exports, 'deprecated', ['addRewriter', 'addFilter', 'clone', 'extend']);\nwarn.forProperties(exports, 'deprecated', ['emitErrs', 'levelLength']);\n// Throw a useful error when users attempt to run `new winston.Logger`.\nwarn.moved(exports, 'createLogger', 'Logger');"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}